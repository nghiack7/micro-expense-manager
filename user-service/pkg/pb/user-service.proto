// proto/user.proto

syntax = "proto3";

package user_service;
option go_package = "./pkg/pb";

service UserService {
    rpc GetCurrentUser (GetCurrentUserRequest) returns (stream GetCurrentUserResponse);
    rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (UpdateCurrentUserResponse);

}
message GetCurrentUserRequest{
    int64 id = 1;
}
message GetCurrentUserResponse {
    int32 code =1;
    User user = 2;
}

message UpdateCurrentUserRequest{
     int64 id = 1;
     User user =2 ;
}

message UpdateCurrentUserResponse{
    int32 code =1;
    User user =2 ;
}

message User {
    string username= 1;
    string email= 2;
    string password_hashed=3;
    string number_phone=4;
    uint32 credit=5;
}


service AuthService{
    rpc SignUp (SignUpRequest) returns ( SignUpResponse);
    rpc SignIn (SignInRequest) returns ( SignInResponse);
    rpc RefreshToken (RefreshTokenRequest) returns ( RefreshTokenResponse);
    rpc GoogleLoginOAuth (GoogleLoginOAuthRequest) returns ( GoogleLoginOAuthResponse);
}

message SignUpRequest {
    string username = 1;
    string password = 2;
    string confirm_password = 3;
    string phone_number =4;
    string email = 5;
    
  }
  
  message SignUpResponse {
    bool success = 1;
    string message = 2;
  }
  
  message SignInRequest {
    string username = 1;
    string email = 3;
    string password = 2;
  }
  
  message SignInResponse {
    bool success = 1;
    string message = 2;
    string access_token = 3;
    string refresh_token = 4;
  }
  
message RefreshTokenRequest{
    int64 user_id = 1;
    string refresh_token =2;
}

message RefreshTokenResponse{
    bool success = 1;
    string access_token=2;
}

message GoogleLoginOAuthRequest{
    string code = 1;
}

message GoogleLoginOAuthResponse{
    bool success = 1;
    string message = 2;
    string access_token=3;
    string refresh_token=4;
}